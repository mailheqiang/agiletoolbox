
敏捷的是与不是

谈论敏捷这么多年，也看到了两种现象。 
一种是认为敏捷无所不能，敏捷能解决万般问题，积极性很高就上马敏捷。
第二种是尝试过敏捷，但是没有达到他期望的效果， 就认为敏捷没用。

在面对团队的过程中，这两种情况经常会遇到。在和团队沟通中，我们是需要对敏捷是什么/能帮助我们什么有一个比较客观理性的认识

首先，先说说敏捷不能做什么，

在软件研发过程来说，引入敏捷：
1. 不能帮你把代码写的质量更快更好又没有bug
2. 不能帮你把单元测试覆盖率提高
3. 不能帮你把文档写的更完美
4. 不能帮你让新员工的成长从3个月缩短到1周
5. 不能帮你把测试时间变成原来的10%
6. 不能。。。

各位看官看到这里就说了，既然敏捷这些都做不了，那我们费那么大力气引入敏捷做什么？

追本溯源，我们先从软件开发的本质开始。软件开发和别的工程本质的区别是什么？ 软件开发本质上是一个“Empirical process” （相对应的传统的其他行业，是一种
Defined process）。 对于这样的行为，有如下几个特征：
1. 客户对于结果的期望是不确定的（因为各种各样的原因）
2. 我们对于结果的产出也不是十分肯定的

敏捷的引入，就是为了解决这种类型的任务而生，因为敏捷：
1. 强调优先关注用户价值
2. 强调避免浪费（LEAN思想）
3. 强调团队自我提高
4. 强调不断适配不断检视
5. 强调
